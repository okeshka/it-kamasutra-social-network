{"version":3,"sources":["components/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/ProfileInfo/ProfileStatusWithHooks.jsx","components/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","event","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","userPhoto","alt","avatar","Post","item","message","likesCount","MyPosts","React","memo","postsElement","posts","map","number","key","id","postsBlock","NewPostReduxForm","onSubmit","values","addPost","newPostText","maxLength13","maxLength","reduxForm","form","handleSubmit","Field","component","Textarea","name","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","Profile","content","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","setProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c73b7dde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tF609\",\"avatar\":\"ProfileInfo_avatar__1dKd5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1cuve\",\"posts\":\"MyPosts_posts__3xHlx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2dZmM\"};","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () =>{\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (event) => {\r\n        setStatus(event.currentTarget.value)\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick = {activateEditMode}>{props.status || 'HUI VAM' }</span>\r\n                    </div> \r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input autoFocus = {true} onChange = {onStatusChange} onBlur = {deactivateEditMode} value = {status} />\r\n                    </div> \r\n                }\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preload from '../common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../assets/img/user.png';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) return <Preload/>\r\n    return (\r\n        <div className = {s.descriptionBlock}>\r\n            <img src = {profile.photos.large || userPhoto} alt = 'morda litsa' className = {s.avatar}/>\r\n            <ProfileStatusWithHooks status = {status} updateStatus = {updateStatus} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = props => {\r\n\r\n    return (\r\n        <div className = {s.item}>\r\n            <img src = \"https://www.1zoom.ru/big2/946/289597-frederika.jpg\"\r\n            alt = \"cartochka\" />\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} Like</span>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport { required, maxLength } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\n\r\nconst MyPosts = React.memo( props => {\r\n    \r\n        let postsElement =  props.posts.map ( number => \r\n            <Post key = {number.id} message = {number.message} likesCount = {number.likesCount} />\r\n        );\r\n\r\n        let makePost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        };\r\n                return (\r\n                <div className = {s.postsBlock}>\r\n                    <h3>My posts</h3>\r\n                    <NewPostReduxForm onSubmit = {makePost}/>\r\n                    <div className = {s.posts}>\r\n                        { postsElement }\r\n                    </div>\r\n                </div>\r\n            )\r\n    \r\n})\r\n\r\nconst maxLength13 = maxLength(13);\r\n\r\nconst NewPost = props => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field component = {Textarea} name = 'newPostText' validate = {[required, maxLength13]}\r\n                 placeholder = 'Мисье УЙ'/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n} \r\n\r\nconst NewPostReduxForm = reduxForm({form: 'NewPostForm'})(NewPost)\r\n\r\nexport default MyPosts;","import {addPost} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from '../ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className = {s.content}>\r\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile; ","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {setProfile, getStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\n//import { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId) this.props.history.push('/login'); // редирект\r\n        };\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props} profile = {this.props.profile} status = {this.props.status}\r\n                updateStatus = {this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {setProfile, getStatus, updateStatus}), withRouter, \r\n//withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}